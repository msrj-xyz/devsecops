name: Go API CI

on:
  push:
    paths:
      - 'projects/backend/go-api/**'
  pull_request:
    paths:
      - 'projects/backend/go-api/**'

jobs:
  test:
    name: Run Go tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Run tests
        working-directory: ./projects/backend/go-api
        run: |
          go version
          go test -v ./... 2>&1 | tee test-output.txt

      - name: Upload test output
        uses: actions/upload-artifact@v4
        with:
          name: go-api-test-output
          path: projects/backend/go-api/test-output.txt

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./projects/backend/go-api
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/go-api:${{ github.sha }}

      - name: Trivy scan pushed image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/go-api:${{ github.sha }}
          format: json
          output: projects/backend/go-api/reports/trivy-go.json

      - name: Semgrep SAST
        uses: returntocorp/semgrep-action@v2
        with:
          config: auto
        continue-on-error: true

      - name: Go vulnerability scan (govulncheck)
        working-directory: ./projects/backend/go-api
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest || true
          govulncheck ./... || true

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        with:
          name: go-api-security-reports-${{ github.run_number }}
          path: projects/backend/go-api/reports/
