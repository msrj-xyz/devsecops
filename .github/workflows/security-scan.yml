name: 🔐 Comprehensive Security Scan

on:
  push:
    branches: [ master, staging, development ]
  pull_request:
    branches: [ master, staging ]
  schedule:
    # Run daily security scan at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  security-audit:
    name: 🔍 Security Audit
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 🏷️ Generate Build Info
      id: build-info
      run: |
        echo "sha-short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        echo "build-date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

    # Secret Scanning
    - name: 🔐 TruffleHog Secret Scan
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

    - name: 🔍 GitLeaks Secret Detection
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}

    # SAST - Static Application Security Testing
    - name: 🛡️ CodeQL Analysis
      uses: github/codeql-action/init@v3
      with:
        languages: javascript, python, java, csharp, go
        config-file: ./.github/codeql/codeql-config.yml

    - name: 🏗️ Autobuild
      uses: github/codeql-action/autobuild@v3

    - name: 📊 Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:javascript,python,java,csharp,go"

    - name: 🔍 Semgrep SAST Scan
      uses: semgrep/semgrep-action@v1
      with:
        config: >-
          p/security-audit
          p/secrets
          p/owasp-top-ten
          p/cwe-top-25
          p/typescript
          p/python
          p/java
          p/golang
        generateSarif: "1"
      env:
        SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}

    - name: 📈 Upload Semgrep SARIF
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: semgrep.sarif

    # SCA - Software Composition Analysis
    - name: 🏗️ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: ☕ Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: 🔍 Snyk Security Scan
      uses: snyk/actions/setup@master
    
    - name: 🔍 Snyk Test
      run: |
        # Test for vulnerabilities
        snyk test --all-projects --severity-threshold=medium || true
        
        # Test Docker images if they exist
        if [ -f "Dockerfile" ]; then
          snyk container test --file=Dockerfile --severity-threshold=high || true
        fi
        
        # Monitor for ongoing vulnerability management
        snyk monitor --all-projects || true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

    - name: 🔍 OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'devsecops-portfolio'
        path: '.'
        format: 'ALL'
        args: >
          --enableRetired
          --enableExperimental
          --nvdApiKey ${{ secrets.NVD_API_KEY }}

    - name: 📤 Upload Dependency Check Results
      uses: actions/upload-artifact@v4
      with:
        name: dependency-check-report
        path: reports/

    # Container Security
    - name: 🐳 Build Test Image
      if: hashFiles('**/Dockerfile') != ''
      run: |
        docker build -t test-image:${{ steps.build-info.outputs.sha-short }} .

    - name: 🔍 Trivy Container Scan
      if: hashFiles('**/Dockerfile') != ''
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'test-image:${{ steps.build-info.outputs.sha-short }}'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: 📤 Upload Trivy SARIF
      if: hashFiles('**/Dockerfile') != ''
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'

    # Infrastructure Security
    - name: 🏗️ Setup Terraform
      if: hashFiles('**/*.tf') != ''
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: '1.6.0'

    - name: 🔍 Checkov IaC Scan
      if: hashFiles('**/*.tf', '**/*.yml', '**/*.yaml') != ''
      uses: bridgecrewio/checkov-action@master
      with:
        directory: .
        framework: terraform,kubernetes,dockerfile,secrets
        output_format: sarif
        output_file_path: checkov-results.sarif

    - name: 📤 Upload Checkov SARIF
      if: hashFiles('**/*.tf', '**/*.yml', '**/*.yaml') != ''
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: checkov-results.sarif

    - name: 🔍 TFSec Terraform Security Scan
      if: hashFiles('**/*.tf') != ''
      uses: aquasecurity/tfsec-action@v1.0.3
      with:
        sarif_file: tfsec-results.sarif

    - name: 📤 Upload TFSec SARIF
      if: hashFiles('**/*.tf') != ''
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: tfsec-results.sarif

    # License Compliance
    - name: 📜 FOSSA License Scan
      if: ${{ secrets.FOSSA_API_KEY != '' }}
      uses: fossas/fossa-action@main
      with:
        api-key: ${{ secrets.FOSSA_API_KEY }}
        run-tests: true

    # Security Summary Report
    - name: 📊 Generate Security Report
      if: always()
      run: |
        echo "# 🔐 Security Scan Summary" > security-report.md
        echo "**Scan Date:** $(date)" >> security-report.md
        echo "**Commit:** ${{ steps.build-info.outputs.sha-short }}" >> security-report.md
        echo "" >> security-report.md
        
        echo "## 🛡️ Scan Results" >> security-report.md
        echo "- ✅ Secret Scanning: Completed" >> security-report.md
        echo "- ✅ SAST Analysis: Completed" >> security-report.md
        echo "- ✅ Dependency Scanning: Completed" >> security-report.md
        
        if [ -f "Dockerfile" ]; then
          echo "- ✅ Container Scanning: Completed" >> security-report.md
        fi
        
        if ls *.tf >/dev/null 2>&1; then
          echo "- ✅ Infrastructure Scanning: Completed" >> security-report.md
        fi
        
        echo "" >> security-report.md
        echo "View detailed results in the Security tab of this repository." >> security-report.md

    - name: 📤 Upload Security Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: security-report
        path: security-report.md

    # Notify on Security Issues
    - name: 🚨 Security Alert
      if: failure()
      uses: 8398a7/action-slack@v3
      with:
        status: failure
        text: '🚨 Security scan failed for ${{ github.repository }}. Please check the results immediately.'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}