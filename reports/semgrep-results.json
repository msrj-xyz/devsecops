{"version":"1.139.0","results":[{"check_id":"yaml.github-actions.security.run-shell-injection.run-shell-injection","path":".github/workflows/deploy.yml","start":{"line":56,"col":7,"offset":1550},"end":{"line":92,"col":2,"offset":2801},"extra":{"message":"Using variable interpolation `${{...}}` with `github` context data in a `run:` step could allow an attacker to inject their own code into the runner. This would allow them to steal secrets and code. `github` context data can have arbitrary user input and should be treated as untrusted. Instead, use an intermediate environment variable with `env:` to store the data and use the environment variable in the `run:` script. Be sure to use double-quotes the environment variable, like this: \"$ENVVAR\".","metadata":{"category":"security","cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://docs.github.com/en/actions/learn-github-actions/security-hardening-for-github-actions#understanding-the-risk-of-script-injections","https://securitylab.github.com/research/github-actions-untrusted-input/"],"technology":["github-actions"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"HIGH","confidence":"HIGH","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/yaml.github-actions.security.run-shell-injection.run-shell-injection","shortlink":"https://sg.run/pkzk"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-check-csurf-middleware-usage.express-check-csurf-middleware-usage","path":"projects/backend/nodejs-api/server.js","start":{"line":10,"col":7,"offset":327},"end":{"line":10,"col":22,"offset":342},"extra":{"message":"A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.","metadata":{"category":"security","references":["https://www.npmjs.com/package/csurf","https://www.npmjs.com/package/csrf","https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html"],"cwe":["CWE-352: Cross-Site Request Forgery (CSRF)"],"owasp":["A01:2021 - Broken Access Control"],"technology":["javascript","typescript","express"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-check-csurf-middleware-usage.express-check-csurf-middleware-usage","shortlink":"https://sg.run/BxzR"},"severity":"INFO","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.nginx.security.header-redefinition.header-redefinition","path":"projects/frontend/react-app/nginx.conf","start":{"line":60,"col":17,"offset":1879},"end":{"line":60,"col":62,"offset":1924},"extra":{"message":"The 'add_header' directive is called in a 'location' block after headers have been set at the server block. Calling 'add_header' in the location block will actually overwrite the headers defined in the server block, no matter which headers are set. To fix this, explicitly set all headers or set all headers in the server block.","metadata":{"cwe":["CWE-16: CWE CATEGORY: Configuration"],"references":["https://github.com/yandex/gixy/blob/master/docs/en/plugins/addheaderredefinition.md"],"category":"security","technology":["nginx"],"confidence":"LOW","owasp":["A06:2017 - Security Misconfiguration","A05:2021 - Security Misconfiguration"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Other"],"source":"https://semgrep.dev/r/generic.nginx.security.header-redefinition.header-redefinition","shortlink":"https://sg.run/Lwl7"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.nginx.security.header-redefinition.header-redefinition","path":"projects/frontend/react-app/nginx.conf","start":{"line":61,"col":17,"offset":1941},"end":{"line":61,"col":68,"offset":1992},"extra":{"message":"The 'add_header' directive is called in a 'location' block after headers have been set at the server block. Calling 'add_header' in the location block will actually overwrite the headers defined in the server block, no matter which headers are set. To fix this, explicitly set all headers or set all headers in the server block.","metadata":{"cwe":["CWE-16: CWE CATEGORY: Configuration"],"references":["https://github.com/yandex/gixy/blob/master/docs/en/plugins/addheaderredefinition.md"],"category":"security","technology":["nginx"],"confidence":"LOW","owasp":["A06:2017 - Security Misconfiguration","A05:2021 - Security Misconfiguration"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Other"],"source":"https://semgrep.dev/r/generic.nginx.security.header-redefinition.header-redefinition","shortlink":"https://sg.run/Lwl7"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.nginx.security.header-redefinition.header-redefinition","path":"projects/frontend/react-app/nginx.conf","start":{"line":69,"col":13,"offset":2161},"end":{"line":69,"col":48,"offset":2196},"extra":{"message":"The 'add_header' directive is called in a 'location' block after headers have been set at the server block. Calling 'add_header' in the location block will actually overwrite the headers defined in the server block, no matter which headers are set. To fix this, explicitly set all headers or set all headers in the server block.","metadata":{"cwe":["CWE-16: CWE CATEGORY: Configuration"],"references":["https://github.com/yandex/gixy/blob/master/docs/en/plugins/addheaderredefinition.md"],"category":"security","technology":["nginx"],"confidence":"LOW","owasp":["A06:2017 - Security Misconfiguration","A05:2021 - Security Misconfiguration"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Other"],"source":"https://semgrep.dev/r/generic.nginx.security.header-redefinition.header-redefinition","shortlink":"https://sg.run/Lwl7"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.nginx.security.header-redefinition.header-redefinition","path":"projects/frontend/react-app/nginx.conf","start":{"line":70,"col":13,"offset":2209},"end":{"line":70,"col":64,"offset":2260},"extra":{"message":"The 'add_header' directive is called in a 'location' block after headers have been set at the server block. Calling 'add_header' in the location block will actually overwrite the headers defined in the server block, no matter which headers are set. To fix this, explicitly set all headers or set all headers in the server block.","metadata":{"cwe":["CWE-16: CWE CATEGORY: Configuration"],"references":["https://github.com/yandex/gixy/blob/master/docs/en/plugins/addheaderredefinition.md"],"category":"security","technology":["nginx"],"confidence":"LOW","owasp":["A06:2017 - Security Misconfiguration","A05:2021 - Security Misconfiguration"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Other"],"source":"https://semgrep.dev/r/generic.nginx.security.header-redefinition.header-redefinition","shortlink":"https://sg.run/Lwl7"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}}],"errors":[{"code":2,"level":"warn","type":"Other syntax error","message":"Other syntax error at line .github/workflows/security-scan-clean.yml:1:\n (approximate error location; error nearby after) error calling parser: found character that cannot start any token character 0 position 0 returned: 0","path":".github/workflows/security-scan-clean.yml"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"yaml.github-actions.security.curl-eval.curl-eval","message":"Internal matching error when running yaml.github-actions.security.curl-eval.curl-eval on .github/workflows/security-scan.yml:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nrule yaml.github-actions.security.curl-eval.curl-eval: metavariable-pattern failed when parsing $SHELL's content as Bash: # Install checkov\npip install checkov\n\n# Skip terraform scanning as requested\necho \"DPnQyP Skipping Terraform scanning as not ready\"\n\n# Scan Kubernetes files only\nif find . -name \"*.yaml\" -o -name \"*.yml\" | grep -E \"(k8s|kubernetes)\" | head -1; then\n  echo \"R`Uh Found Kubernetes files, scanning...\"\n  checkov -f k8s/ --framework kubernetes --output json --output-file reports/checkov-k8s.json || true\n  echo \"# R`UN Checkov IaC Security Report\" > reports/checkov-report.md\n  echo \"**Status**: D]F COMPLETED (Terraform skipped)\" >> reports/checkov-report.md\nelse\n  echo \"No Kubernetes files found\"\n  echo \"# R`UN Checkov IaC Security Report\" > reports/checkov-report.md\n  echo \"**Status**: DPnQyP SKIPPED - No IaC files found\" >> reports/checkov-report.md\nfi\n","path":".github/workflows/security-scan.yml"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"yaml.github-actions.security.curl-eval.curl-eval","message":"Internal matching error when running yaml.github-actions.security.curl-eval.curl-eval on .github/workflows/security-scan.yml:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nrule yaml.github-actions.security.curl-eval.curl-eval: metavariable-pattern failed when parsing $SHELL's content as Bash: echo \"# R`\\bQyP Security Scan Summary Report\" > reports/security-summary.md\necho \"\" >> reports/security-summary.md\necho \"**Scan Date**: $(date)\" >> reports/security-summary.md\necho \"**Branch**: ${{ github.ref_name }}\" >> reports/security-summary.md\necho \"**Commit**: ${{ github.sha }}\" >> reports/security-summary.md\necho \"\" >> reports/security-summary.md\n\necho \"## R`Uh Enabled Security Tools\" >> reports/security-summary.md\necho \"\" >> reports/security-summary.md\necho \"| Tool | Status | Purpose |\" >> reports/security-summary.md\necho \"|------|--------|---------|\" >> reports/security-summary.md\necho \"| TruffleHog | ${{ env.ENABLE_TRUFFLEHOG == 'true' && 'D]F Enabled' || 'DPyQyP Disabled' }} | Secret Detection |\" >> reports/security-summary.md\necho \"| GitLeaks | ${{ env.ENABLE_GITLEAKS == 'true' && 'D]F Enabled' || 'DPyQyP Disabled' }} | Secret Detection |\" >> reports/security-summary.md\necho \"| CodeQL | ${{ env.ENABLE_CODEQL == 'true' && 'D]F Enabled' || 'DPyQyP Disabled' }} | SAST Analysis |\" >> reports/security-summary.md\necho \"| Semgrep | ${{ env.ENABLE_SEMGREP == 'true' && 'D]F Enabled' || 'DPyQyP Disabled' }} | SAST Analysis |\" >> reports/security-summary.md\necho \"| Snyk | ${{ env.ENABLE_SNYK == 'true' && 'D]F Enabled' || 'DPyQyP Disabled' }} | SCA Analysis |\" >> reports/security-summary.md\necho \"| OWASP | ${{ env.ENABLE_OWASP == 'true' && 'D]F Enabled' || 'DPyQyP Disabled' }} | Dependency Check |\" >> reports/security-summary.md\necho \"| Trivy | ${{ env.ENABLE_TRIVY == 'true' && 'D]F Enabled' || 'DPyQyP Disabled' }} | Container Security |\" >> reports/security-summary.md\necho \"| Checkov | ${{ env.ENABLE_CHECKOV == 'true' && 'D]F Enabled' || 'DPyQyP Disabled' }} | IaC Security |\" >> reports/security-summary.md\necho \"\" >> reports/security-summary.md\n\necho \"## R`T... (truncated 138 more characters)","path":".github/workflows/security-scan.yml"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"yaml.github-actions.security.curl-eval.curl-eval","message":"Internal matching error when running yaml.github-actions.security.curl-eval.curl-eval on .github/workflows/security-scan.yml:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nrule yaml.github-actions.security.curl-eval.curl-eval: metavariable-pattern failed when parsing $SHELL's content as Bash: if [ -z \"${{ secrets.SNYK_TOKEN }}\" ]; then\n  echo \"D^M SNYK_TOKEN not configured\"\n  echo \"# R`UN Snyk SCA Report\" > reports/snyk-report.md\n  echo \"**Status**: D^M FAILED - Token not configured\" >> reports/snyk-report.md\n  exit 1\nelse\n  npm install -g snyk\n  snyk auth ${{ secrets.SNYK_TOKEN }}\n  snyk test --json > reports/snyk-results.json || true\n  echo \"# R`UN Snyk SCA Report\" > reports/snyk-report.md\n  echo \"**Status**: D]F COMPLETED\" >> reports/snyk-report.md\nfi\n","path":".github/workflows/security-scan.yml"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/deploy.yml","start":{"line":57,"col":18,"offset":1556},"end":{"line":57,"col":38,"offset":1576}},{"path":".github/workflows/deploy.yml","start":{"line":60,"col":11,"offset":1556},"end":{"line":60,"col":28,"offset":1573}},{"path":".github/workflows/deploy.yml","start":{"line":77,"col":46,"offset":1556},"end":{"line":77,"col":67,"offset":1577}},{"path":".github/workflows/deploy.yml","start":{"line":87,"col":6,"offset":1556},"end":{"line":90,"col":58,"offset":1721}}]],"message":"Syntax error at line .github/workflows/deploy.yml:57:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ inputs.environment` was unexpected","path":".github/workflows/deploy.yml","spans":[{"file":".github/workflows/deploy.yml","start":{"line":57,"col":18,"offset":1556},"end":{"line":57,"col":38,"offset":1576}},{"file":".github/workflows/deploy.yml","start":{"line":60,"col":11,"offset":1556},"end":{"line":60,"col":28,"offset":1573}},{"file":".github/workflows/deploy.yml","start":{"line":77,"col":46,"offset":1556},"end":{"line":77,"col":67,"offset":1577}},{"file":".github/workflows/deploy.yml","start":{"line":87,"col":6,"offset":1556},"end":{"line":90,"col":58,"offset":1721}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/deploy.yml","start":{"line":111,"col":69,"offset":3419},"end":{"line":111,"col":86,"offset":3436}},{"path":".github/workflows/deploy.yml","start":{"line":123,"col":6,"offset":3419},"end":{"line":136,"col":4,"offset":3864}}]],"message":"Syntax error at line .github/workflows/deploy.yml:111:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ github.ref_name` was unexpected","path":".github/workflows/deploy.yml","spans":[{"file":".github/workflows/deploy.yml","start":{"line":111,"col":69,"offset":3419},"end":{"line":111,"col":86,"offset":3436}},{"file":".github/workflows/deploy.yml","start":{"line":123,"col":6,"offset":3419},"end":{"line":136,"col":4,"offset":3864}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/deploy.yml","start":{"line":181,"col":18,"offset":5946},"end":{"line":191,"col":4,"offset":6208}}]],"message":"Syntax error at line .github/workflows/deploy.yml:181:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `\"R`hk Running tests before deployment...\"\n\n# Run Node.js tests\nif [ -f \"package.json\" ] && npm run test --dry-run 2>/dev/null; then\n  npm run test\nfi\n\n# Run Python tests\nif [ -f \"requirements.txt\" ] && command -v pytest >/dev/null 2>&1; then\n  pytest || true\nfi\n` was unexpected","path":".github/workflows/deploy.yml","spans":[{"file":".github/workflows/deploy.yml","start":{"line":181,"col":18,"offset":5946},"end":{"line":191,"col":4,"offset":6208}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/deploy.yml","start":{"line":221,"col":9,"offset":6721},"end":{"line":221,"col":12,"offset":6724}},{"path":".github/workflows/deploy.yml","start":{"line":224,"col":16,"offset":6721},"end":{"line":224,"col":19,"offset":6724}},{"path":".github/workflows/deploy.yml","start":{"line":227,"col":15,"offset":6721},"end":{"line":227,"col":18,"offset":6724}},{"path":".github/workflows/deploy.yml","start":{"line":227,"col":52,"offset":6721},"end":{"line":227,"col":55,"offset":6724}},{"path":".github/workflows/deploy.yml","start":{"line":227,"col":79,"offset":6721},"end":{"line":227,"col":82,"offset":6724}}]],"message":"Syntax error at line .github/workflows/deploy.yml:221:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected","path":".github/workflows/deploy.yml","spans":[{"file":".github/workflows/deploy.yml","start":{"line":221,"col":9,"offset":6721},"end":{"line":221,"col":12,"offset":6724}},{"file":".github/workflows/deploy.yml","start":{"line":224,"col":16,"offset":6721},"end":{"line":224,"col":19,"offset":6724}},{"file":".github/workflows/deploy.yml","start":{"line":227,"col":15,"offset":6721},"end":{"line":227,"col":18,"offset":6724}},{"file":".github/workflows/deploy.yml","start":{"line":227,"col":52,"offset":6721},"end":{"line":227,"col":55,"offset":6724}},{"file":".github/workflows/deploy.yml","start":{"line":227,"col":79,"offset":6721},"end":{"line":227,"col":82,"offset":6724}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/deploy.yml","start":{"line":278,"col":20,"offset":9309},"end":{"line":278,"col":69,"offset":9358}},{"path":".github/workflows/deploy.yml","start":{"line":293,"col":36,"offset":9309},"end":{"line":293,"col":57,"offset":9330}},{"path":".github/workflows/deploy.yml","start":{"line":294,"col":32,"offset":9309},"end":{"line":294,"col":48,"offset":9325}},{"path":".github/workflows/deploy.yml","start":{"line":295,"col":39,"offset":9309},"end":{"line":295,"col":62,"offset":9332}},{"path":".github/workflows/deploy.yml","start":{"line":341,"col":18,"offset":9309},"end":{"line":341,"col":34,"offset":9325}},{"path":".github/workflows/deploy.yml","start":{"line":341,"col":55,"offset":9309},"end":{"line":341,"col":76,"offset":9330}},{"path":".github/workflows/deploy.yml","start":{"line":341,"col":82,"offset":9309},"end":{"line":341,"col":105,"offset":9332}}]],"message":"Syntax error at line .github/workflows/deploy.yml:278:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ needs.determine-environment.outputs.environment` was unexpected","path":".github/workflows/deploy.yml","spans":[{"file":".github/workflows/deploy.yml","start":{"line":278,"col":20,"offset":9309},"end":{"line":278,"col":69,"offset":9358}},{"file":".github/workflows/deploy.yml","start":{"line":293,"col":36,"offset":9309},"end":{"line":293,"col":57,"offset":9330}},{"file":".github/workflows/deploy.yml","start":{"line":294,"col":32,"offset":9309},"end":{"line":294,"col":48,"offset":9325}},{"file":".github/workflows/deploy.yml","start":{"line":295,"col":39,"offset":9309},"end":{"line":295,"col":62,"offset":9332}},{"file":".github/workflows/deploy.yml","start":{"line":341,"col":18,"offset":9309},"end":{"line":341,"col":34,"offset":9325}},{"file":".github/workflows/deploy.yml","start":{"line":341,"col":55,"offset":9309},"end":{"line":341,"col":76,"offset":9330}},{"file":".github/workflows/deploy.yml","start":{"line":341,"col":82,"offset":9309},"end":{"line":341,"col":105,"offset":9332}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/deploy.yml","start":{"line":363,"col":20,"offset":12263},"end":{"line":363,"col":69,"offset":12312}},{"path":".github/workflows/deploy.yml","start":{"line":365,"col":10,"offset":12263},"end":{"line":372,"col":41,"offset":12476}}]],"message":"Syntax error at line .github/workflows/deploy.yml:363:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ needs.determine-environment.outputs.environment` was unexpected","path":".github/workflows/deploy.yml","spans":[{"file":".github/workflows/deploy.yml","start":{"line":363,"col":20,"offset":12263},"end":{"line":363,"col":69,"offset":12312}},{"file":".github/workflows/deploy.yml","start":{"line":365,"col":10,"offset":12263},"end":{"line":372,"col":41,"offset":12476}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/deploy.yml","start":{"line":412,"col":13,"offset":14271},"end":{"line":431,"col":4,"offset":14956}}]],"message":"Syntax error at line .github/workflows/deploy.yml:412:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `DEPLOYMENT_URL=\"${{ steps.deploy.outputs.deployment-url }}\"\n\nif [ \"$DEPLOYMENT_URL\" != \"pending\" ] && [ -n \"$DEPLOYMENT_URL\" ]; then\n  echo \"R`UN Running health check on: $DEPLOYMENT_URL\"\n  \n  # Wait a bit for the application to fully start\n  sleep 30\n  \n  # Simple health check\n  HTTP_STATUS=$(curl -s -o /dev/null -w \"%{http_code}\" \"$DEPLOYMENT_URL\" || echo \"000\")\n  \n  if [ \"$HTTP_STATUS\" -ge 200 ] && [ \"$HTTP_STATUS\" -lt 400 ]; then\n    echo \"D]F Health check passed - HTTP $HTTP_STATUS\"\n  else\n    echo \"D[aQyP Health check warning - HTTP $HTTP_STATUS\"\n    echo \"Application may still be starting up...\"\n  fi\nelse\n  echo \"DPnQyP Skipping health check - URL not available yet\"\nfi\n` was unexpected","path":".github/workflows/deploy.yml","spans":[{"file":".github/workflows/deploy.yml","start":{"line":412,"col":13,"offset":14271},"end":{"line":431,"col":4,"offset":14956}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/deploy.yml","start":{"line":467,"col":6,"offset":15565},"end":{"line":468,"col":27,"offset":15618}}]],"message":"Syntax error at line .github/workflows/deploy.yml:467:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `\"R`TK Deployment Summary:\"\ncat deployment-summary.md\n` was unexpected","path":".github/workflows/deploy.yml","spans":[{"file":".github/workflows/deploy.yml","start":{"line":467,"col":6,"offset":15565},"end":{"line":468,"col":27,"offset":15618}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/deploy.yml","start":{"line":523,"col":6,"offset":18657},"end":{"line":523,"col":63,"offset":18714}}]],"message":"Syntax error at line .github/workflows/deploy.yml:523:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `\"R`XRQyP Time's up! Proceeding with resource cleanup...\"\n` was unexpected","path":".github/workflows/deploy.yml","spans":[{"file":".github/workflows/deploy.yml","start":{"line":523,"col":6,"offset":18657},"end":{"line":523,"col":63,"offset":18714}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/deploy.yml","start":{"line":543,"col":20,"offset":19752},"end":{"line":543,"col":69,"offset":19801}}]],"message":"Syntax error at line .github/workflows/deploy.yml:543:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ needs.determine-environment.outputs.environment` was unexpected","path":".github/workflows/deploy.yml","spans":[{"file":".github/workflows/deploy.yml","start":{"line":543,"col":20,"offset":19752},"end":{"line":543,"col":69,"offset":19801}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/deploy.yml","start":{"line":571,"col":20,"offset":20945},"end":{"line":571,"col":69,"offset":20994}},{"path":".github/workflows/deploy.yml","start":{"line":577,"col":3,"offset":20945},"end":{"line":577,"col":6,"offset":20948}},{"path":".github/workflows/deploy.yml","start":{"line":577,"col":40,"offset":20945},"end":{"line":577,"col":43,"offset":20948}},{"path":".github/workflows/deploy.yml","start":{"line":577,"col":67,"offset":20945},"end":{"line":577,"col":70,"offset":20948}}]],"message":"Syntax error at line .github/workflows/deploy.yml:571:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ needs.determine-environment.outputs.environment` was unexpected","path":".github/workflows/deploy.yml","spans":[{"file":".github/workflows/deploy.yml","start":{"line":571,"col":20,"offset":20945},"end":{"line":571,"col":69,"offset":20994}},{"file":".github/workflows/deploy.yml","start":{"line":577,"col":3,"offset":20945},"end":{"line":577,"col":6,"offset":20948}},{"file":".github/workflows/deploy.yml","start":{"line":577,"col":40,"offset":20945},"end":{"line":577,"col":43,"offset":20948}},{"file":".github/workflows/deploy.yml","start":{"line":577,"col":67,"offset":20945},"end":{"line":577,"col":70,"offset":20948}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/deploy.yml","start":{"line":593,"col":20,"offset":21859},"end":{"line":593,"col":69,"offset":21908}},{"path":".github/workflows/deploy.yml","start":{"line":599,"col":26,"offset":21859},"end":{"line":599,"col":29,"offset":21862}},{"path":".github/workflows/deploy.yml","start":{"line":600,"col":24,"offset":21859},"end":{"line":600,"col":43,"offset":21878}},{"path":".github/workflows/deploy.yml","start":{"line":600,"col":62,"offset":21859},"end":{"line":600,"col":77,"offset":21874}}]],"message":"Syntax error at line .github/workflows/deploy.yml:593:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ needs.determine-environment.outputs.environment` was unexpected","path":".github/workflows/deploy.yml","spans":[{"file":".github/workflows/deploy.yml","start":{"line":593,"col":20,"offset":21859},"end":{"line":593,"col":69,"offset":21908}},{"file":".github/workflows/deploy.yml","start":{"line":599,"col":26,"offset":21859},"end":{"line":599,"col":29,"offset":21862}},{"file":".github/workflows/deploy.yml","start":{"line":600,"col":24,"offset":21859},"end":{"line":600,"col":43,"offset":21878}},{"file":".github/workflows/deploy.yml","start":{"line":600,"col":62,"offset":21859},"end":{"line":600,"col":77,"offset":21874}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/security-scan.yml","start":{"line":86,"col":18,"offset":2712},"end":{"line":91,"col":101,"offset":3188}}]],"message":"Syntax error at line .github/workflows/security-scan.yml:86:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `\"# Q!~R`UN TruffleHog Secret Detection Report\" > reports/trufflehog-report.md\necho \"**Status**: $(if [ $? -eq 0 ]; then echo 'D]F PASSED'; else echo 'D^M FAILED'; fi)\" >> reports/trufflehog-report.md\necho \"**Scan Date**: $(date)\" >> reports/trufflehog-report.md\necho \"**Branch**: ${{ github.ref_name }}\" >> reports/trufflehog-report.md\necho \"\" >> reports/trufflehog-report.md\necho \"Scanning for hardcoded secrets, API keys, and credentials...\" >> reports/trufflehog-report.md\n` was unexpected","path":".github/workflows/security-scan.yml","spans":[{"file":".github/workflows/security-scan.yml","start":{"line":86,"col":18,"offset":2712},"end":{"line":91,"col":101,"offset":3188}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/security-scan.yml","start":{"line":103,"col":18,"offset":3578},"end":{"line":106,"col":73,"offset":3901}}]],"message":"Syntax error at line .github/workflows/security-scan.yml:103:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `\"# R`UN GitLeaks Secret Detection Report\" > reports/gitleaks-report.md\necho \"**Status**: $(if [ $? -eq 0 ]; then echo 'D]F PASSED'; else echo 'D^M FAILED'; fi)\" >> reports/gitleaks-report.md\necho \"**Scan Date**: $(date)\" >> reports/gitleaks-report.md\necho \"**Branch**: ${{ github.ref_name }}\" >> reports/gitleaks-report.md\n` was unexpected","path":".github/workflows/security-scan.yml","spans":[{"file":".github/workflows/security-scan.yml","start":{"line":103,"col":18,"offset":3578},"end":{"line":106,"col":73,"offset":3901}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/security-scan.yml","start":{"line":133,"col":6,"offset":4583},"end":{"line":135,"col":60,"offset":4818}}]],"message":"Syntax error at line .github/workflows/security-scan.yml:133:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `\"# R`UN Semgrep SAST Report\" > reports/semgrep-report.md\necho \"**Status**: $(if [ $? -eq 0 ]; then echo 'D]F PASSED'; else echo 'D^M FAILED'; fi)\" >> reports/semgrep-report.md\necho \"**Scan Date**: $(date)\" >> reports/semgrep-report.md\n` was unexpected","path":".github/workflows/security-scan.yml","spans":[{"file":".github/workflows/security-scan.yml","start":{"line":133,"col":6,"offset":4583},"end":{"line":135,"col":60,"offset":4818}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/security-scan.yml","start":{"line":173,"col":18,"offset":6401},"end":{"line":175,"col":58,"offset":6640}}]],"message":"Syntax error at line .github/workflows/security-scan.yml:173:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `\"# R`UN OWASP Dependency Check Report\" > reports/owasp-report.md\necho \"**Status**: $(if [ $? -eq 0 ]; then echo 'D]F PASSED'; else echo 'D^M FAILED'; fi)\" >> reports/owasp-report.md\necho \"**Scan Date**: $(date)\" >> reports/owasp-report.md\n` was unexpected","path":".github/workflows/security-scan.yml","spans":[{"file":".github/workflows/security-scan.yml","start":{"line":173,"col":18,"offset":6401},"end":{"line":175,"col":58,"offset":6640}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/security-scan.yml","start":{"line":195,"col":1,"offset":7205},"end":{"line":212,"col":4,"offset":7997}}]],"message":"Syntax error at line .github/workflows/security-scan.yml:195:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `sudo apt-get update\nsudo apt-get install wget apt-transport-https gnupg lsb-release\nwget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -\necho \"deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main\" | sudo tee -a /etc/apt/sources.list.d/trivy.list\nsudo apt-get update\nsudo apt-get install trivy\n\n# Scan Docker images if any exist\nif find . -name \"Dockerfile\" -type f | head -1; then\n  echo \"R`Qt Found Dockerfiles, performing container security scan...\"\n  find . -name \"Dockerfile\" -type f | while read dockerfile; do\n    dir=$(dirname \"$dockerfile\")\n    echo \"Scanning $dockerfile...\"\n    trivy fs --format json --output \"reports/trivy-$(basename $dir).json\" \"$dir\"\n  done\nelse\n  echo \"No Dockerfiles found, skipping container scan\"\nfi\n` was unexpected","path":".github/workflows/security-scan.yml","spans":[{"file":".github/workflows/security-scan.yml","start":{"line":195,"col":1,"offset":7205},"end":{"line":212,"col":4,"offset":7997}}]}],"paths":{"scanned":[".env.example",".github/ISSUE_TEMPLATE/bug_report.md",".github/ISSUE_TEMPLATE/documentation.md",".github/ISSUE_TEMPLATE/feature_request.md",".github/ISSUE_TEMPLATE/security_issue.md",".github/codeql/codeql-config.yml",".github/dependabot.yml",".github/workflows/deploy.yml",".github/workflows/security-scan-clean.yml",".github/workflows/security-scan.yml",".github/workflows/security-scan.yml.backup",".gitignore",".npmrc",".nvmrc","LICENSE","Makefile","README.MD","checkov-reports/checkov-report.md","checkov-reports/results.sarif","checkov-reports/results_json.json","checkov-reports/security-summary.md","cloudbuild.yaml","docs/AUTO_DESTROY_GUIDE.md","docs/BEST_PRACTICES.md","docs/CODEQL_OPTIMIZATION.md","docs/CODE_OF_CONDUCT.md","docs/COMPLETE_STATUS_REPORT.md","docs/CONTRIBUTING.md","docs/FINAL_COMPLETION_REPORT.md","docs/GCP_COMPLETE_SETUP_GUIDE.md","docs/INCREMENTAL_SECURITY_TESTING.md","docs/INFRASTRUCTURE_SECURITY_FIXES.md","docs/PHASE_4_COMPLETION_REPORT.md","docs/PRODUCTION_SECURITY_CONFIG.md","docs/README.md","docs/SECURITY_POLICY.md","docs/SECURITY_REPORTS_AUDIT.md","docs/SLACK_NOTIFICATION_DESIGN.md","docs/SLACK_NOTIFICATION_FINAL.md","docs/WORKFLOW_ANALYSIS.md","docs/WORKFLOW_GUIDE.md","downloaded-reports/results.sarif","downloaded-reports/security-summary.md","downloaded-reports/trufflehog-report.md","infrastructure/terraform/main.tf","infrastructure/terraform/outputs.tf","infrastructure/terraform/variables.tf","k8s/staging/deployment.yaml","owasp-reports/security-reports-51/dependency-check-gitlab.json","owasp-reports/security-reports-51/dependency-check-jenkins.html","owasp-reports/security-reports-51/dependency-check-report.csv","owasp-reports/security-reports-51/owasp-report.md","owasp-reports/security-reports-51/results.sarif","owasp-reports/security-reports-51/security-summary.md","package-lock.json","package.json","projects/README.md","projects/backend/nodejs-api/.env.example","projects/backend/nodejs-api/Dockerfile","projects/backend/nodejs-api/README.md","projects/backend/nodejs-api/package-lock.json","projects/backend/nodejs-api/package.json","projects/backend/nodejs-api/server.js","projects/backend/nodejs-api/server.test.js","projects/frontend/react-app/Dockerfile","projects/frontend/react-app/README.md","projects/frontend/react-app/nginx.conf","projects/frontend/react-app/package-lock.json","projects/frontend/react-app/package.json","projects/frontend/react-app/public/index.html","projects/frontend/react-app/public/manifest.json","projects/frontend/react-app/src/App.js","projects/frontend/react-app/src/__tests__/App.test.js","projects/frontend/react-app/src/index.css","projects/frontend/react-app/src/index.js","projects/frontend/react-app/src/reportWebVitals.js","reports/gitleaks-report.md","reports/results.sarif","reports/security-summary.md","reports/trufflehog-report.md","results.sarif","security-summary.md","semgrep-reports/results.sarif","semgrep-reports/security-summary.md","semgrep-reports/semgrep-report.md","semgrep-reports/semgrep-results.json","trivy-nodejs-api.json","trivy-react-app.json","trivy-results.sarif"]},"time":{"rules":[],"rules_parse_time":1.1832802295684814,"profiling_times":{"config_time":1.5721681118011475,"core_time":3.0165534019470215,"ignores_time":0.0013043880462646484,"total_time":4.590620994567871},"parsing_time":{"total_time":0.0,"per_file_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_files":[]},"scanning_time":{"total_time":4.078693151473999,"per_file_time":{"mean":0.019330299296085304,"std_dev":0.003994217845164078},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_files":[]},"matching_time":{"total_time":0.0,"per_file_and_rule_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_rules_on_files":[]},"tainting_time":{"total_time":0.0,"per_def_and_rule_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_rules_on_defs":[]},"fixpoint_timeouts":[],"prefiltering":{"project_level_time":0.0,"file_level_time":0.0,"rules_with_project_prefilters_ratio":0.0,"rules_with_file_prefilters_ratio":0.9610659283613082,"rules_selected_ratio":0.08669319951548711,"rules_matched_ratio":0.08669319951548711},"targets":[],"total_bytes":0,"max_memory_bytes":1095347584},"engine_requested":"OSS","skipped_rules":[]}