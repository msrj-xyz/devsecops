apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment
  namespace: staging
  labels:
    app: devsecops-app
    environment: staging
    version: blue
spec:
  replicas: 2
  selector:
    matchLabels:
      app: devsecops-app
      environment: staging
  template:
    metadata:
      labels:
        app: devsecops-app
        environment: staging
        version: blue
    spec:
      serviceAccountName: devsecops-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: app
        image: us-central1-docker.pkg.dev/PROJECT_ID/devsecops-repo/app:IMAGE_TAG
        ports:
        - containerPort: 3000
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "staging"
        - name: PORT
          value: "3000"
        - name: SECRETS_PATH
          value: "/etc/secrets"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: var-cache
          mountPath: /var/cache
        - name: app-secrets-volume
          mountPath: "/etc/secrets"
          readOnly: true
      volumes:
      - name: tmp
        emptyDir: {}
      - name: var-cache
        emptyDir: {}
      - name: app-secrets-volume
        secret:
          secretName: app-secrets
          defaultMode: 0400

---
apiVersion: v1
kind: Service
metadata:
  name: app-service
  namespace: staging
  labels:
    app: devsecops-app
    environment: staging
spec:
  selector:
    app: devsecops-app
    environment: staging
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
  type: LoadBalancer

---
apiVersion: v1
kind: Namespace
metadata:
  name: staging
  labels:
    name: staging
    environment: staging

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: devsecops-sa
  namespace: staging
  annotations:
    iam.gke.io/gcp-service-account: devsecops-workload-sa@PROJECT_ID.iam.gserviceaccount.com

# ================================================================
# EXTERNAL SECRETS CONFIGURATION
# ================================================================
# Secrets are managed through Google Secret Manager
# DO NOT PUT ACTUAL SECRETS IN KUBERNETES MANIFESTS
# This configuration uses External Secrets Operator (ESO)
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: app-secrets
  namespace: staging
spec:
  secretStoreRef:
    name: gcpsm-secret-store
    kind: SecretStore
  target:
    name: app-secrets
    creationPolicy: Owner
  data:
  - secretKey: database-url
    remoteRef:
      key: staging-database-url
      version: latest
  - secretKey: jwt-secret  
    remoteRef:
      key: staging-jwt-secret
      version: latest

---
# SECRET STORE FOR GOOGLE SECRET MANAGER
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: gcpsm-secret-store
  namespace: staging
spec:
  provider:
    gcpsm:
      projectId: PROJECT_ID  # Will be replaced by Terraform
      auth:
        workloadIdentity:
          clusterLocation: us-central1
          clusterName: sb-cluster
          serviceAccountRef:
            name: external-secrets-sa

---
# SERVICE ACCOUNT FOR EXTERNAL SECRETS OPERATOR
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets-sa
  namespace: staging
  annotations:
    iam.gke.io/gcp-service-account: external-secrets-sa@PROJECT_ID.iam.gserviceaccount.com

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: staging-network-policy
  namespace: staging
spec:
  podSelector:
    matchLabels:
      app: devsecops-app
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: staging
    ports:
    - protocol: TCP
      port: 3000
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 443  # HTTPS
    - protocol: TCP
      port: 53   # DNS
    - protocol: UDP
      port: 53   # DNS